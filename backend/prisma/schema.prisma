generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String @id @default(uuid())
  name            String
  email           String
  phone_user      String
  company_id_user String
  dateborn        String
  radiogender     String

  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  deleteAt DateTime?
  address  Address[]
  Company  Company?  @relation(fields: [company_id_user], references: [id])

  @@index([name])
  @@map("users")
}

model Company {
  id            String @id @default(dbgenerated())
  reasonsocial  String
  namefantasy   String
  CNPJ          String
  phone_company String

  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  deleteAt DateTime?
  address  Address[]
  User     User[]

  @@index([reasonsocial])
  @@map("companys")
}

model Address {
  id                 String  @id @default(uuid())
  cep                String
  adrees             String
  number_end         String
  state              String
  city               String
  user_id            String?
  company_id_address String?

  trail   User?    @relation(fields: [user_id], references: [id])
  company Company? @relation(fields: [company_id_address], references: [id])

  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  deleteAt DateTime?

  @@map("address")
}

model Payment {
  id           String        @id @default(uuid())
  description  String
  companyId    String
  value        String
  observacion  String
  date_payment DateTime
  datedue      DateTime
  typepayment  String
  status       PaymentStatus @default(PAYABLE)

  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  deleteAt DateTime?

  @@map("payments")
}

enum PaymentStatus {
  PAYABLE
  PAIDOUT
  RECEIVABLE
  RECEIVED
}
